worker_processes  auto;
worker_rlimit_nofile 65536;

error_log logs/error.log info;

events {
    #use epoll;
    worker_connections 65536;
}

env ENV;

http {
    lua_package_path '$prefix/lua/?.lua;/usr/local/Cellar/openresty/1.13.6.1/lualib/?.lua;;';

    lua_shared_dict api_manager_cache 5m;
    lua_shared_dict api_mapping_cache 50m;

    #access_log off;
    log_format main '{"tenantId":"$tenant_id","remote_addr":""$remote_addr","remote_user":"$remote_user","time_local":"$time_local","request":"$request",'
        '"status":"$status","body_bytes_sent":"$body_bytes_sent","bytes_sent":$bytes_sent","http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent","http_x_forwarded_for":"$http_x_forwarded_for"}';
    open_log_file_cache max=1000 inactive=60s;
    access_log logs/access.log main;

    tcp_nopush on;
    tcp_nodelay on;
    #keepalive_timeout 65;
    keepalive_requests 100000;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 60;
    proxy_ignore_client_abort on;

    sendfile on;

    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    init_worker_by_lua_file lua/init_worker.lua;

    server {
        listen 8080;

        location ~ /(.+?)/(.*) {
          set $tenant_id $1;
          set $api_path $2;
          set $target '';
          set $cors false;
          set $method $request_method;

          access_by_lua_file lua/gateway.lua;

          if ($cors = true){
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
          }
          if ($request_method = "OPTIONS") {
            return 204;
          }

          proxy_pass $target;
          proxy_method $method;
          proxy_pass_request_headers on;

        }
    }

}
